name: build-linux

on:
  workflow_dispatch:
  workflow_call:
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - 'CMakeLists.txt'
      - '.github/workflows/build-linux.yml'
      - 'scripts/compile.sh'

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install base build tools
        run: |
          sudo apt-get update
          # Build essentials, CMake, Ninja, pkg-config, and autotools (for vcpkg fallback)
          sudo apt-get install -y --no-install-recommends \
            build-essential cmake ninja-build pkg-config software-properties-common \
            autoconf automake libtool libtool-bin m4 gettext gperf texinfo help2man

      - name: Enable universe repo and install SDL3 (apt)
        continue-on-error: true
        run: |
          sudo add-apt-repository -y universe
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends libsdl3-dev

      - name: Check SDL3 availability
        id: checksdl
        run: |
          if pkg-config --exists sdl3; then
            echo "SDL3 via pkg-config is available"
            echo "need_vcpkg=false" >> $GITHUB_OUTPUT
          else
            echo "SDL3 not found via pkg-config; will fallback to vcpkg"
            echo "need_vcpkg=true" >> $GITHUB_OUTPUT
          fi

      - name: Install vcpkg (clone + bootstrap)
        if: steps.checksdl.outputs.need_vcpkg == 'true'
        shell: bash
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          ./vcpkg/bootstrap-vcpkg.sh

      - name: Restore vcpkg cache (installed & downloads)
        if: steps.checksdl.outputs.need_vcpkg == 'true'
        uses: actions/cache@v4
        with:
          path: |
            vcpkg/installed
            vcpkg/downloads
          key: ${{ runner.os }}-vcpkg-sdl3-x64-linux
          restore-keys: |
            ${{ runner.os }}-vcpkg-

      - name: Restore vcpkg binary cache
        if: steps.checksdl.outputs.need_vcpkg == 'true'
        uses: actions/cache@v4
        with:
          path: |
            vcpkg/binary_cache
          key: ${{ runner.os }}-vcpkg-bincache-sdl3-x64-linux
          restore-keys: |
            ${{ runner.os }}-vcpkg-bincache-

      - name: Ensure vcpkg binary cache dir exists
        if: steps.checksdl.outputs.need_vcpkg == 'true'
        shell: bash
        run: mkdir -p ./vcpkg/binary_cache

      - name: Install SDL3 with vcpkg
        if: steps.checksdl.outputs.need_vcpkg == 'true'
        shell: bash
        run: ./vcpkg/vcpkg --vcpkg-root ./vcpkg install sdl3 --triplet x64-linux

      - name: Restore CMake/Ninja build cache
        uses: actions/cache@v4
        with:
          path: |
            build
          key: ${{ runner.os }}-build-ninja-release-linux-v1
          restore-keys: |
            ${{ runner.os }}-build-ninja-release-
            ${{ runner.os }}-build-

      - name: Configure (CMake + Ninja)
        shell: bash
        run: |
          TOOLCHAIN=""
          if [ -f "${GITHUB_WORKSPACE}/vcpkg/scripts/buildsystems/vcpkg.cmake" ]; then
            TOOLCHAIN="-DCMAKE_TOOLCHAIN_FILE=${GITHUB_WORKSPACE}/vcpkg/scripts/buildsystems/vcpkg.cmake"
          fi
          cmake -S . -B build -G "Ninja" -DCMAKE_BUILD_TYPE=Release $TOOLCHAIN

      - name: Build (script)
        shell: bash
        run: |
          TOOLCHAIN=""
          if [ -f "${GITHUB_WORKSPACE}/vcpkg/scripts/buildsystems/vcpkg.cmake" ]; then
            TOOLCHAIN="-DCMAKE_TOOLCHAIN_FILE=${GITHUB_WORKSPACE}/vcpkg/scripts/buildsystems/vcpkg.cmake"
          fi
          ./scripts/compile.sh -G "Ninja" -DCMAKE_BUILD_TYPE=Release $TOOLCHAIN

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: keyleport-linux
          path: |
            build/keyleport
          retention-days: 5
